@using WebAppMain.Models
@model List<WebAppMain.Models.UserRolesViewModel>

@{
    ViewData["Title"] = "Роли";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var searchString = ViewData["searchString"] as string;
    var roleFilter = ViewData["roleFilter"] as string;
    var pageNumber = ViewBag.PageNumber as int? ?? 1;
    var pageSize = 10; // Число элементов на странице
    var totalItems = Model.Count();
    var totalPages = (int)Math.Ceiling(totalItems / (double)pageSize);
    var startIndex = (pageNumber - 1) * pageSize;
    var visibleItems = Model.Skip(startIndex).Take(pageSize);
}


<div class="col">
    <div class="card shadow">
        <div class="card-body border-0 form-inline justify-content-between">
            <h3>Список ролей</h3>
            <form asp-action="Index" method="get">
                <div class="col">
                    <div class="form-group">
                        <div class="input-group mr-2">
                            <input class="form-control py-2 border-right-0 border" type="search" id="example-search-input" name="searchString" placeholder="Поиск по ФИО" value="@searchString">
                            <span class="input-group-append">
                                <div class="input-group-text bg-transparent"><i class="bi bi-search"></i></div>
                            </span>
                        </div>

                        <select class="form-control" name="roleFilter">
                            <option value="">Все роли</option>
                            <option value="Учитель" selected="@((string)ViewBag.RoleFilter == "Учитель")">Учитель</option>
                            <option value="Администратор" selected="@((string)ViewBag.RoleFilter == "Администратор")">Администратор</option>
                            <option value="Ученик" selected="@((string)ViewBag.RoleFilter == "Ученик")">Ученик</option>
                        </select>
                        <button class="btn btn-icon-only text-light" type="submit">
                            <i class="bi bi-funnel"></i>
                        </button>
                    </div>
                </div>
            </form>
        </div>

        <div class="table-responsive">
            <table class="table align-items-center table-flush">
                <thead class="thead-default">
                    <tr>
                        <th scope="col">Имя</th>
                        <th scope="col">Фамилия</th>
                        <th scope="col">Отчество</th>
                        <th scope="col">Email</th>
                        <th scope="col">Роль</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in visibleItems)
                    {
                        <tr scope="row">
                            <td>
                                <div class="media-body">
                                    <span class="mb-0 text-sm">@Html.DisplayFor(modelItem => user.Name)</span>
                                </div>
                            </td>
                            <td>
                                <div class="media-body">
                                    <span class="mb-0 text-sm">@Html.DisplayFor(modelItem => user.Surname)</span>
                                </div>
                            </td>
                            <td>
                                <div class="media-body">
                                    <span class="mb-0 text-sm">@Html.DisplayFor(modelItem => user.Patronymic)</span>
                                </div>
                            </td>
                            <td>
                                <div class="media-body">
                                    <span class="mb-0 text-sm">@Html.DisplayFor(modelItem => user.Email)</span>
                                </div>
                            </td>
                            <td>
                                <div class="media-body">
                                    <span class="mb-0 text-sm">@string.Join(" , ", user.Roles.ToList())</span>
                                </div>
                            </td>

                            <td class="text-right">
                                <a class="btn btn-sm btn-icon-only text-light" asp-controller="UserRoles" asp-action="Manage" asp-route-userId="@user.UserId">
                                    <i class="bi bi-three-dots-vertical"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @if (totalPages > 1)
        {
            <div class="card-footer py-4">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center mb-0">
                        @if (pageNumber > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { constantFilter = ViewData["constantFilter"], searchString = searchString, roleFilter = roleFilter, pageNumber = pageNumber - 1 })" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                    <span class="sr-only">Previous</span>
                                </a>
                            </li>
                        }

                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == pageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { constantFilter = ViewData["constantFilter"], searchString = searchString, roleFilter = roleFilter, pageNumber = i })">@i</a>
                            </li>
                        }

                        @if (pageNumber < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { constantFilter = ViewData["constantFilter"], searchString = searchString, roleFilter = roleFilter, pageNumber = pageNumber + 1 })" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>
